	component microarquiteturaGp3 is
		port (
			barra_d_y_out_export  : out std_logic_vector(9 downto 0);                    -- export
			barra_e_y_out_export  : out std_logic_vector(9 downto 0);                    -- export
			bola_x_out_export     : out std_logic_vector(9 downto 0);                    -- export
			bola_y_out_export     : out std_logic_vector(9 downto 0);                    -- export
			buttons_export        : in  std_logic_vector(3 downto 0) := (others => 'X'); -- export
			clk_clk               : in  std_logic                    := 'X';             -- clk
			lcd_read_write        : out std_logic;                                       -- read_write
			lcd_register_select   : out std_logic;                                       -- register_select
			lcd_enable_op         : out std_logic;                                       -- enable_op
			lcd_data_out          : out std_logic_vector(7 downto 0);                    -- data_out
			reset_reset_n         : in  std_logic                    := 'X';             -- reset_n
			vga_monitor_vsync     : out std_logic;                                       -- vsync
			vga_monitor_r         : out std_logic_vector(3 downto 0);                    -- r
			vga_monitor_g         : out std_logic_vector(3 downto 0);                    -- g
			vga_monitor_b         : out std_logic_vector(3 downto 0);                    -- b
			vga_monitor_hsync     : out std_logic;                                       -- hsync
			vga_monitor_bola_x    : in  std_logic_vector(9 downto 0) := (others => 'X'); -- bola_x
			vga_monitor_bola_y    : in  std_logic_vector(9 downto 0) := (others => 'X'); -- bola_y
			vga_monitor_barra_e_y : in  std_logic_vector(9 downto 0) := (others => 'X'); -- barra_e_y
			vga_monitor_barra_d_y : in  std_logic_vector(9 downto 0) := (others => 'X')  -- barra_d_y
		);
	end component microarquiteturaGp3;

